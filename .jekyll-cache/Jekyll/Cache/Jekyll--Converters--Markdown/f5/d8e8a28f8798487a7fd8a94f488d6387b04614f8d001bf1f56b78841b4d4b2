I"å<p><a href="https://pixabay.com/en/michelangelo-abstract-boy-child-71282/" target="_blank">
    <img src="/images/posts/05.jpg" class="center" />
</a></p>

<h2 id="generating-service-classes">Generating Service Classes</h2>

<p>First of all, in a dotnet core project we should define SOAP services classes. If you use Visual Studio you can find some tools about it but If you donâ€™t like user interfaces like me, you can have another option to do that.</p>

<p>In first step, you should add <code class="language-plaintext highlighter-rouge">dotnet-svcutil</code> tool reference in your project and execute <code class="language-plaintext highlighter-rouge">dotnet restore</code>;</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;ItemGroup&gt;</span>
    <span class="nt">&lt;DotNetCliToolReference</span> <span class="na">Include=</span><span class="s">"dotnet-svcutil"</span> <span class="na">Version=</span><span class="s">"1.0.*"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/ItemGroup&gt;</span>
</code></pre></div></div>

<p>After that, you can fetch services structure using a simple command in your project folder;</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>dotnet svcutil http://my-service-host.com/wsdl/IMyService <span class="nt">-n</span> <span class="s2">"*,MyProject.Services.IMyService"</span> <span class="nt">-d</span> ServiceFolder/IMyService
</code></pre></div></div>

<p>With <code class="language-plaintext highlighter-rouge">-n</code> argument we can set a namespace. If you are working multiple service, you should set a namespace. With <code class="language-plaintext highlighter-rouge">-d</code> argument we can choose a folder to put objects.</p>

<h2 id="preparing-the-service">Preparing The Service</h2>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">BasicHttpBinding</span> <span class="n">binding</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">BasicHttpBinding</span><span class="p">();</span>
<span class="n">binding</span><span class="p">.</span><span class="n">Security</span><span class="p">.</span><span class="n">Transport</span><span class="p">.</span><span class="n">ClientCredentialType</span> <span class="p">=</span> <span class="n">HttpClientCredentialType</span><span class="p">.</span><span class="n">None</span><span class="p">;</span>
<span class="n">binding</span><span class="p">.</span><span class="n">Security</span><span class="p">.</span><span class="n">Mode</span> <span class="p">=</span> <span class="n">BasicHttpSecurityMode</span><span class="p">.</span><span class="n">None</span><span class="p">;</span>

<span class="n">EndpointAddress</span> <span class="n">endpoint</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">EndpointAddress</span><span class="p">(</span><span class="k">new</span> <span class="nf">Uri</span><span class="p">(</span><span class="s">"http://my-service-host.com/soap/IMyService"</span><span class="p">));</span>
<span class="n">ChannelFactory</span><span class="p">&lt;</span><span class="n">IMyService</span><span class="p">&gt;</span> <span class="n">factory</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ChannelFactory</span><span class="p">&lt;</span><span class="n">IMyService</span><span class="p">&gt;(</span><span class="n">binding</span><span class="p">,</span> <span class="n">endpoint</span><span class="p">);</span>
<span class="n">IMyService</span> <span class="n">service</span> <span class="p">=</span> <span class="n">factory</span><span class="p">.</span><span class="nf">CreateChannel</span><span class="p">();</span>

<span class="c1">// then you can call the service</span>
</code></pre></div></div>

<p>If you have some authentication configuration, you should set them in <code class="language-plaintext highlighter-rouge">BasicHttpBinding</code> section. In this example I use <code class="language-plaintext highlighter-rouge">http</code> protocol, not <code class="language-plaintext highlighter-rouge">https</code>. If you are using https  protocol, please be careful to select BasicHttp<strong>s</strong>Binding object.</p>

<h2 id="usage">Usage</h2>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">await</span> <span class="n">service</span><span class="p">.</span><span class="nf">GetUsersAsync</span><span class="p">()</span>
</code></pre></div></div>

<p>It is easy right? But in my experiences, I could call methods only async.</p>

<h2 id="troubleshooting">Troubleshooting</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The operation <span class="s1">'xxxx'</span> could not be loaded because it specifies <span class="s2">"rpc-style"</span> <span class="k">in</span> <span class="s2">"literal"</span> mode, but uses message contract types or the System.ServiceModel.Channels.Message. This combination is disallowed <span class="nt">--</span> specify a different value <span class="k">for </span>style or use parameters other than message contract types or System.ServiceModel.Channels.Message.
</code></pre></div></div>

<p>You may see that error. To solve it, you should open .csproj file and edit following packages minumum version like these;</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;ItemGroup&gt;</span>
    <span class="nt">&lt;PackageReference</span> <span class="na">Include=</span><span class="s">"System.ServiceModel.Duplex"</span> <span class="na">Version=</span><span class="s">"4.5.*"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;PackageReference</span> <span class="na">Include=</span><span class="s">"System.ServiceModel.Http"</span> <span class="na">Version=</span><span class="s">"4.5.*"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;PackageReference</span> <span class="na">Include=</span><span class="s">"System.ServiceModel.NetTcp"</span> <span class="na">Version=</span><span class="s">"4.5.*"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;PackageReference</span> <span class="na">Include=</span><span class="s">"System.ServiceModel.Security"</span> <span class="na">Version=</span><span class="s">"4.5.*"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/ItemGroup&gt;</span>
</code></pre></div></div>
:ET